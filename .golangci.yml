linters-settings:
  depguard: # https://github.com/kedacore/keda/issues/4980
    rules:
      main:
        deny:
          - pkg: sync/atomic
            desc: "use type-safe atomics from go.uber.org/atomic"
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 200
    statements: 150
  goconst:
    min-len: 3
    min-occurrences: 3
  gocritic:
    enabled-tags:
    - diagnostic
    - experimental
    - opinionated
    - performance
    - style
    disabled-checks:
    - dupImport # https://github.com/go-critic/go-critic/issues/845
    - ifElseChain
    - octalLiteral
    - whyNoLint
    - wrapperFunc
    - importShadow # not important for now
    - unnamedResult # not important
  gocyclo:
    min-complexity: 15
  goimports: {}
  golint:
    min-confidence: 0
  gofmt:
    simplify: true
  gomnd:
    # `linters.gomnd.settings` is deprecated. Please use the options `linters.gomnd.checks`,`linters.gomnd.ignored-numbers`,`linters.gomnd.ignored-files`,`linters.gomnd.ignored-functions`
    # don't include the "operation" and "assign"
    checks:
    - argument
    - case
    - condition
    - return
  govet:
    # `linters.govet.check-shadowing` is deprecated. Please enable `shadow` instead
    shadow: true
    settings:
      printf:
        funcs:
        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Debugf
        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Infof
        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Warnf
        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Errorf
        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Fatalf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell: {}
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
  - asciicheck
  - bodyclose
  - depguard 
  - errcheck
  - gofmt
  - goimports
  - goprintffuncname
  - gosec
  - gosimple
  - ineffassign
  - misspell
  - nakedret
  - rowserrcheck
  - staticcheck
  - typecheck
  - unconvert
  - unparam
  - unused
  - revive
  - gocritic
  - govet
  - dupl
issues:
  # `run.skip-dirs` is deprecated, please use `issues.exclude-dirs`
  exclude-dirs:
  - cmd/docs
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
  #    - path: _test\.go
  #      linters:
  #        - gomnd
  #    https://github.com/go-critic/go-critic/issues/926
  - linters:
    - gocritic
    text: "unnecessaryDefer:"
  exclude:
  - 'shadow: declaration of "err" shadows declaration at'
  max-same-issues: 0
run:
  timeout: 1h30m
# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.57.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
  - echo "here I can run custom commands, but no preparation needed for this repo"
